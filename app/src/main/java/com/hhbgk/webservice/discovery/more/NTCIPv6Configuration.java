package com.hhbgk.webservice.discovery.more;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.8.0
//
// Created by Quasar Development at 04/04/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class NTCIPv6Configuration extends AttributeContainer implements KvmSerializable
{

    
    public Boolean AcceptRouterAdvert;
    
    public NTCEnums.IPv6DHCPConfiguration DHCP=NTCEnums.IPv6DHCPConfiguration.Auto;
    
    public ArrayList< NTCPrefixedIPv6Address> Manual =new ArrayList<NTCPrefixedIPv6Address >();
    
    public ArrayList< NTCPrefixedIPv6Address> LinkLocal =new ArrayList<NTCPrefixedIPv6Address >();
    
    public ArrayList< NTCPrefixedIPv6Address> FromDHCP =new ArrayList<NTCPrefixedIPv6Address >();
    
    public ArrayList< NTCPrefixedIPv6Address> FromRA =new ArrayList<NTCPrefixedIPv6Address >();
    
    public NTCIPv6ConfigurationExtension Extension;

    public NTCIPv6Configuration ()
    {
    }

    public NTCIPv6Configuration (Object paramObj,NTCExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                Object obj = info.getValue();
                if (info.name.equals("AcceptRouterAdvert"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.AcceptRouterAdvert = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.AcceptRouterAdvert = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("DHCP"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.DHCP = NTCEnums.IPv6DHCPConfiguration.fromString(j.toString());
                            }
                        }
                        else if (obj instanceof NTCEnums.IPv6DHCPConfiguration){
                            this.DHCP = (NTCEnums.IPv6DHCPConfiguration)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("Manual"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.Manual==null)
                        {
                            this.Manual = new ArrayList< NTCPrefixedIPv6Address>();
                        }
                        Object j =obj;
                        NTCPrefixedIPv6Address j1= (NTCPrefixedIPv6Address)__envelope.get(j,NTCPrefixedIPv6Address.class,false);
                        this.Manual.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("LinkLocal"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.LinkLocal==null)
                        {
                            this.LinkLocal = new ArrayList< NTCPrefixedIPv6Address>();
                        }
                        Object j =obj;
                        NTCPrefixedIPv6Address j1= (NTCPrefixedIPv6Address)__envelope.get(j,NTCPrefixedIPv6Address.class,false);
                        this.LinkLocal.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("FromDHCP"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.FromDHCP==null)
                        {
                            this.FromDHCP = new ArrayList< NTCPrefixedIPv6Address>();
                        }
                        Object j =obj;
                        NTCPrefixedIPv6Address j1= (NTCPrefixedIPv6Address)__envelope.get(j,NTCPrefixedIPv6Address.class,false);
                        this.FromDHCP.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("FromRA"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.FromRA==null)
                        {
                            this.FromRA = new ArrayList< NTCPrefixedIPv6Address>();
                        }
                        Object j =obj;
                        NTCPrefixedIPv6Address j1= (NTCPrefixedIPv6Address)__envelope.get(j,NTCPrefixedIPv6Address.class,false);
                        this.FromRA.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("Extension"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.Extension = (NTCIPv6ConfigurationExtension)__envelope.get(j,NTCIPv6ConfigurationExtension.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return this.AcceptRouterAdvert!=null?this.AcceptRouterAdvert:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==1)
        {
            return this.DHCP!=null?this.DHCP.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex>=2 && propertyIndex < 2+this.Manual.size())
        {
            return this.Manual.get(propertyIndex-(2));
        }
        if(propertyIndex>=2+this.Manual.size() && propertyIndex < 2+this.Manual.size()+this.LinkLocal.size())
        {
            return this.LinkLocal.get(propertyIndex-(2+this.Manual.size()));
        }
        if(propertyIndex>=2+this.Manual.size()+this.LinkLocal.size() && propertyIndex < 2+this.Manual.size()+this.LinkLocal.size()+this.FromDHCP.size())
        {
            return this.FromDHCP.get(propertyIndex-(2+this.Manual.size()+this.LinkLocal.size()));
        }
        if(propertyIndex>=2+this.Manual.size()+this.LinkLocal.size()+this.FromDHCP.size() && propertyIndex < 2+this.Manual.size()+this.LinkLocal.size()+this.FromDHCP.size()+this.FromRA.size())
        {
            return this.FromRA.get(propertyIndex-(2+this.Manual.size()+this.LinkLocal.size()+this.FromDHCP.size()));
        }
        if(propertyIndex==2+this.Manual.size()+this.LinkLocal.size()+this.FromDHCP.size()+this.FromRA.size())
        {
            return this.Extension!=null?this.Extension:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 3+Manual.size()+LinkLocal.size()+FromDHCP.size()+FromRA.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "AcceptRouterAdvert";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "DHCP";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex>=2 && propertyIndex < 2+this.Manual.size())
        {
            info.type = NTCPrefixedIPv6Address.class;
            info.name = "Manual";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex>=2+this.Manual.size() && propertyIndex < 2+this.Manual.size()+this.LinkLocal.size())
        {
            info.type = NTCPrefixedIPv6Address.class;
            info.name = "LinkLocal";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex>=2+this.Manual.size()+this.LinkLocal.size() && propertyIndex < 2+this.Manual.size()+this.LinkLocal.size()+this.FromDHCP.size())
        {
            info.type = NTCPrefixedIPv6Address.class;
            info.name = "FromDHCP";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex>=2+this.Manual.size()+this.LinkLocal.size()+this.FromDHCP.size() && propertyIndex < 2+this.Manual.size()+this.LinkLocal.size()+this.FromDHCP.size()+this.FromRA.size())
        {
            info.type = NTCPrefixedIPv6Address.class;
            info.name = "FromRA";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==2+this.Manual.size()+this.LinkLocal.size()+this.FromDHCP.size()+this.FromRA.size())
        {
            info.type = NTCIPv6ConfigurationExtension.class;
            info.name = "Extension";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }

    
}

