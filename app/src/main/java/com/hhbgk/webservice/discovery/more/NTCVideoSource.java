package com.hhbgk.webservice.discovery.more;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.8.0
//
// Created by Quasar Development at 04/04/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class NTCVideoSource extends NTCDeviceEntity implements KvmSerializable
{

    
    public Float Framerate=0f;
    
    public NTCVideoResolution Resolution;
    
    public NTCImagingSettings Imaging;
    
    public NTCVideoSourceExtension Extension;

    public NTCVideoSource ()
    {
    }

    public NTCVideoSource (Object paramObj,NTCExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                Object obj = info.getValue();
                if (info.name.equals("Framerate"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.Framerate = new Float(j.toString());
                            }
                        }
                        else if (obj instanceof Float){
                            this.Framerate = (Float)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("Resolution"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.Resolution = (NTCVideoResolution)__envelope.get(j,NTCVideoResolution.class,false);
                    }
                    continue;
                }
                if (info.name.equals("Imaging"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.Imaging = (NTCImagingSettings)__envelope.get(j,NTCImagingSettings.class,false);
                    }
                    continue;
                }
                if (info.name.equals("Extension"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.Extension = (NTCVideoSourceExtension)__envelope.get(j,NTCVideoSourceExtension.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return Framerate;
        }
        if(propertyIndex==count+1)
        {
            return Resolution;
        }
        if(propertyIndex==count+2)
        {
            return this.Imaging!=null?this.Imaging:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.Extension!=null?this.Extension:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+4;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = Float.class;
            info.name = "Framerate";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+1)
        {
            info.type = NTCVideoResolution.class;
            info.name = "Resolution";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+2)
        {
            info.type = NTCImagingSettings.class;
            info.name = "Imaging";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+3)
        {
            info.type = NTCVideoSourceExtension.class;
            info.name = "Extension";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }

    
}

