package com.hhbgk.webservice.discovery.more;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.8.0
//
// Created by Quasar Development at 04/04/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class NTCOSDTextConfiguration extends AttributeContainer implements KvmSerializable
{

    
    public String Type;
    
    public String DateFormat;
    
    public String TimeFormat;
    
    public Integer FontSize;
    
    public NTCOSDColor FontColor;
    
    public NTCOSDColor BackgroundColor;
    
    public String PlainText;
    
    public NTCOSDTextConfigurationExtension Extension;

    public NTCOSDTextConfiguration ()
    {
    }

    public NTCOSDTextConfiguration (Object paramObj,NTCExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                Object obj = info.getValue();
                if (info.name.equals("Type"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.Type = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.Type = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("DateFormat"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.DateFormat = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.DateFormat = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("TimeFormat"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.TimeFormat = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.TimeFormat = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("FontSize"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.FontSize = Integer.parseInt(j.toString());
                            }
                        }
                        else if (obj instanceof Integer){
                            this.FontSize = (Integer)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("FontColor"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.FontColor = (NTCOSDColor)__envelope.get(j,NTCOSDColor.class,false);
                    }
                    continue;
                }
                if (info.name.equals("BackgroundColor"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.BackgroundColor = (NTCOSDColor)__envelope.get(j,NTCOSDColor.class,false);
                    }
                    continue;
                }
                if (info.name.equals("PlainText"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.PlainText = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.PlainText = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("Extension"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.Extension = (NTCOSDTextConfigurationExtension)__envelope.get(j,NTCOSDTextConfigurationExtension.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return Type;
        }
        if(propertyIndex==1)
        {
            return this.DateFormat!=null?this.DateFormat:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.TimeFormat!=null?this.TimeFormat:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.FontSize!=null?this.FontSize:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return this.FontColor!=null?this.FontColor:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.BackgroundColor!=null?this.BackgroundColor:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==6)
        {
            return this.PlainText!=null?this.PlainText:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==7)
        {
            return this.Extension!=null?this.Extension:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 8;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Type";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "DateFormat";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "TimeFormat";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "FontSize";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==4)
        {
            info.type = NTCOSDColor.class;
            info.name = "FontColor";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==5)
        {
            info.type = NTCOSDColor.class;
            info.name = "BackgroundColor";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==6)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "PlainText";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==7)
        {
            info.type = NTCOSDTextConfigurationExtension.class;
            info.name = "Extension";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }

    
}

