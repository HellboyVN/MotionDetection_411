package com.hhbgk.webservice.discovery.more;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.8.0
//
// Created by Quasar Development at 04/04/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class NTCVideoSourceConfigurationExtension2 extends AttributeContainer implements KvmSerializable
{

    
    public ArrayList< NTCLensDescription> LensDescription =new ArrayList<NTCLensDescription >();
    
    public NTCSceneOrientation SceneOrientation;

    public NTCVideoSourceConfigurationExtension2 ()
    {
    }

    public NTCVideoSourceConfigurationExtension2 (Object paramObj,NTCExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                Object obj = info.getValue();
                if (info.name.equals("LensDescription"))
                {
                    if(obj!=null)
                    {
        
                    
                        if(this.LensDescription==null)
                        {
                            this.LensDescription = new ArrayList< NTCLensDescription>();
                        }
                        Object j =obj;
                        NTCLensDescription j1= (NTCLensDescription)__envelope.get(j,NTCLensDescription.class,false);
                        this.LensDescription.add(j1);
                   
        
                    }
                    continue;
                }
                if (info.name.equals("SceneOrientation"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.SceneOrientation = (NTCSceneOrientation)__envelope.get(j,NTCSceneOrientation.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex>=0 && propertyIndex < 0+this.LensDescription.size())
        {
            return this.LensDescription.get(propertyIndex-(0));
        }
        if(propertyIndex==0+this.LensDescription.size())
        {
            return this.SceneOrientation!=null?this.SceneOrientation:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 1+LensDescription.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex>=0 && propertyIndex < 0+this.LensDescription.size())
        {
            info.type = NTCLensDescription.class;
            info.name = "LensDescription";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==0+this.LensDescription.size())
        {
            info.type = NTCSceneOrientation.class;
            info.name = "SceneOrientation";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }

    
}

