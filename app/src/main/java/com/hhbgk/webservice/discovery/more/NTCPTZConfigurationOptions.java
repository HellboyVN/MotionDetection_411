package com.hhbgk.webservice.discovery.more;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.8.0
//
// Created by Quasar Development at 04/04/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class NTCPTZConfigurationOptions extends AttributeContainer implements KvmSerializable
{

    
    public NTCPTZSpaces Spaces;
    
    public NTCDurationRange PTZTimeout;
    
    public NTCPTControlDirectionOptions PTControlDirection;
    
    public NTCPTZConfigurationOptions2 Extension;
    
    public String PTZRamps;

    public NTCPTZConfigurationOptions ()
    {
    }

    public NTCPTZConfigurationOptions (Object paramObj,NTCExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                Object obj = info.getValue();
                if (info.name.equals("Spaces"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.Spaces = (NTCPTZSpaces)__envelope.get(j,NTCPTZSpaces.class,false);
                    }
                    continue;
                }
                if (info.name.equals("PTZTimeout"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.PTZTimeout = (NTCDurationRange)__envelope.get(j,NTCDurationRange.class,false);
                    }
                    continue;
                }
                if (info.name.equals("PTControlDirection"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.PTControlDirection = (NTCPTControlDirectionOptions)__envelope.get(j,NTCPTControlDirectionOptions.class,false);
                    }
                    continue;
                }
                if (info.name.equals("Extension"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.Extension = (NTCPTZConfigurationOptions2)__envelope.get(j,NTCPTZConfigurationOptions2.class,false);
                    }
                    continue;
                }

            }

        }



        if (inObj.hasAttribute("PTZRamps"))
        {	
            Object j = inObj.getAttribute("PTZRamps");
            if (j != null)
            {
                PTZRamps = j.toString();
	            
            }
        }

    }

    @Override
    public Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return Spaces;
        }
        if(propertyIndex==1)
        {
            return PTZTimeout;
        }
        if(propertyIndex==2)
        {
            return this.PTControlDirection!=null?this.PTControlDirection:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.Extension!=null?this.Extension:SoapPrimitive.NullSkip;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 4;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = NTCPTZSpaces.class;
            info.name = "Spaces";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==1)
        {
            info.type = NTCDurationRange.class;
            info.name = "PTZTimeout";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==2)
        {
            info.type = NTCPTControlDirectionOptions.class;
            info.name = "PTControlDirection";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==3)
        {
            info.type = NTCPTZConfigurationOptions2.class;
            info.name = "Extension";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }



    @Override
    public int getAttributeCount() {
        return 1;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
        {
            info.name = "PTZRamps";
            info.namespace= "";
            if(this.PTZRamps!=null)
            {
                info.setValue(this.PTZRamps);
            }
            
        }
    }

    @Override
    public void getAttribute(int i, AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(AttributeInfo attributeInfo) {

    }    
}

