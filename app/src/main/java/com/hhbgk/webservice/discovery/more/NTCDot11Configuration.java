package com.hhbgk.webservice.discovery.more;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.8.0
//
// Created by Quasar Development at 04/04/2017
//
//---------------------------------------------------


import org.ksoap2.serialization.AttributeContainer;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.math.BigInteger;
import java.util.Hashtable;

public class NTCDot11Configuration extends AttributeContainer implements KvmSerializable
{

    
    public String SSID;
    
    public NTCEnums.Dot11StationMode Mode=NTCEnums.Dot11StationMode.Adhoc;
    
    public String Alias;
    
    public BigInteger Priority=BigInteger.ZERO;
    
    public NTCDot11SecurityConfiguration Security;

    public NTCDot11Configuration ()
    {
    }

    public NTCDot11Configuration (Object paramObj,NTCExtendedSoapSerializationEnvelope __envelope)
    {
	    
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                Object obj = info.getValue();
                if (info.name.equals("SSID"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.SSID = j.toString();
                            }
                        }
                        else{
                            this.SSID = obj.toString();
                        }
                    }
                    continue;
                }
                if (info.name.equals("Mode"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.Mode = NTCEnums.Dot11StationMode.fromString(j.toString());
                            }
                        }
                        else if (obj instanceof NTCEnums.Dot11StationMode){
                            this.Mode = (NTCEnums.Dot11StationMode)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("Alias"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.Alias = j.toString();
                            }
                        }
                        else if (obj instanceof String){
                            this.Alias = (String)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("Priority"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.Priority = new BigInteger(j.toString());
                            }
                        }
                        else if (obj instanceof BigInteger){
                            this.Priority = (BigInteger)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("Security"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.Security = (NTCDot11SecurityConfiguration)__envelope.get(j,NTCDot11SecurityConfiguration.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return SSID;
        }
        if(propertyIndex==1)
        {
            return this.Mode!=null?this.Mode.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return Alias;
        }
        if(propertyIndex==3)
        {
            return this.Priority!=null?this.Priority.toString():SoapPrimitive.NullSkip;
        }
        if(propertyIndex==4)
        {
            return Security;
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 5;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "SSID";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Mode";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Alias";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==3)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Priority";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==4)
        {
            info.type = NTCDot11SecurityConfiguration.class;
            info.name = "Security";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }

    
}

