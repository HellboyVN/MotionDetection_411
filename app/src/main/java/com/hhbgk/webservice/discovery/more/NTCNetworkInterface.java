package com.hhbgk.webservice.discovery.more;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.0.8.0
//
// Created by Quasar Development at 04/04/2017
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class NTCNetworkInterface extends NTCDeviceEntity implements KvmSerializable
{

    
    public Boolean Enabled=false;
    
    public NTCNetworkInterfaceInfo Info;
    
    public NTCNetworkInterfaceLink Link;
    
    public NTCIPv4NetworkInterface IPv4;
    
    public NTCIPv6NetworkInterface IPv6;
    
    public NTCNetworkInterfaceExtension Extension;

    public NTCNetworkInterface ()
    {
    }

    public NTCNetworkInterface (Object paramObj,NTCExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                Object obj = info.getValue();
                if (info.name.equals("Enabled"))
                {
                    if(obj!=null)
                    {
        
                        if (obj.getClass().equals(SoapPrimitive.class))
                        {
                            SoapPrimitive j =(SoapPrimitive) obj;
                            if(j.toString()!=null)
                            {
                                this.Enabled = new Boolean(j.toString());
                            }
                        }
                        else if (obj instanceof Boolean){
                            this.Enabled = (Boolean)obj;
                        }
                    }
                    continue;
                }
                if (info.name.equals("Info"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.Info = (NTCNetworkInterfaceInfo)__envelope.get(j,NTCNetworkInterfaceInfo.class,false);
                    }
                    continue;
                }
                if (info.name.equals("Link"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.Link = (NTCNetworkInterfaceLink)__envelope.get(j,NTCNetworkInterfaceLink.class,false);
                    }
                    continue;
                }
                if (info.name.equals("IPv4"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.IPv4 = (NTCIPv4NetworkInterface)__envelope.get(j,NTCIPv4NetworkInterface.class,false);
                    }
                    continue;
                }
                if (info.name.equals("IPv6"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.IPv6 = (NTCIPv6NetworkInterface)__envelope.get(j,NTCIPv6NetworkInterface.class,false);
                    }
                    continue;
                }
                if (info.name.equals("Extension"))
                {
                    if(obj!=null)
                    {
                        Object j = obj;
                        this.Extension = (NTCNetworkInterfaceExtension)__envelope.get(j,NTCNetworkInterfaceExtension.class,false);
                    }
                    continue;
                }

            }

        }



    }

    @Override
    public Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return Enabled;
        }
        if(propertyIndex==count+1)
        {
            return this.Info!=null?this.Info:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.Link!=null?this.Link:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.IPv4!=null?this.IPv4:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+4)
        {
            return this.IPv6!=null?this.IPv6:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+5)
        {
            return this.Extension!=null?this.Extension:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+6;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "Enabled";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+1)
        {
            info.type = NTCNetworkInterfaceInfo.class;
            info.name = "Info";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+2)
        {
            info.type = NTCNetworkInterfaceLink.class;
            info.name = "Link";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+3)
        {
            info.type = NTCIPv4NetworkInterface.class;
            info.name = "IPv4";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+4)
        {
            info.type = NTCIPv6NetworkInterface.class;
            info.name = "IPv6";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        if(propertyIndex==count+5)
        {
            info.type = NTCNetworkInterfaceExtension.class;
            info.name = "Extension";
            info.namespace= "http://www.onvif.org/ver10/schema";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }

    
}

